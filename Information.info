Lessons:
    https://www.youtube.com/playlist?list=PLAma_mKffTOR5o0WNHnY0mTjKxnCgSXrZ

Lesson 2:
    1. Create Maven project with webapp archetype (IntelliJ IDEA Ultimate edition)
    2. Install dependencies to pom.xml:
        - Spring core
        - Spring beans
        - Spring context
    3. New directory 'src/main/resources'. Mark it as 'Resources Root'
    4. New directory 'src/main/java'. Mark it as 'Sources Root'
    5. New Package 'src/main/java/by.springcourse' (As GroupID)
    6. Create class TestBean with private String field 'name', constructor, setter and getter
    7. Create config file 'src/main/resources/applicationContext.xml' with code
    8. Create class TestSpring with code
    9. Run Main method -> My name to console

Lesson 4:
    1. Delete class TestBean
    2. Create interface Music
    3. Create class ClassicalMusic implements Music
    4. Create class RockMusic implements Music
    5. Create class MusicPlayer
    6. Update 'applicationContext.xml'
    7. Update class TestSpring
    8. Run Main method -> Playing music to console
    9. Do changes in 'applicationContext.xml' -> Run Main -> Playing another music to console
    HomeWork: Add another music style -> // Done

Lesson 5:
    1. Create new bean musicPlayerBean in 'applicationContext.xml'
    2. Update class TestSpring
    3. Run Main method -> Playing music to console

Lesson 6:
    1. Add setter to class MusicPlayer and empty constructor
    2. Update 'applicationContext.xml'
    3. Run Main method -> Playing music to console
    4. Create fields 'name' and 'volume' in class MusicPlayer
    5. Add setters and getters for these fields
    6. Add properties to bean musicPlayerBean in 'applicationContext.xml'
    7. Update class TestSpring
    8. Run Main method -> Playing music to console + name and volume
    9. Create file 'src/main/resources/musicPlayer.properties' with variables
    10. Update 'applicationContext.xml'
    11. Run Main method -> Playing music to console + name and volume
    HomeWork: Make list with genres and run musicPlayer with all these genres -> // Done

Lesson 7:
    1. Make secondMusicPlayer with id from musicPlayer
    2. Compare two objects -> equals, because scope is singleton
    3. Change scope to prototype
    4. Compare two objects -> not equals, because scope is prototype

Lesson 8:
    1. Add init and destroy methods to class MetalMusic
    2. Add these methods to 'applicationContext.xml'
    3. Run Main method -> LOG messages from these methods to console
    HomeWork: Check runs init and destroy methods on beans with prototype and singleton scope -> Done
    4. Add private constructor in class MetalMusic
    5. Add method to create new MetalMusic object
    6. Add this method to 'applicationContext.xml'
    7. Run Main method -> All working

Lesson 9:
    1.